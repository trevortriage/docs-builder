@using Elastic.Markdown.Helpers
@using Elastic.Markdown.IO.Navigation
@inherits RazorSlice<NavigationTreeItem>
@foreach (var item in Model.SubTree.NavigationItems)
{
	var id = item.Id;
	if (item is FileNavigation file)
	{
		var f = file.File;
		<li class="block ml-2 pl-2 border-l-1 border-l-gray-200 group/li">
			<div class="flex">
				<a
					hx-get="@f.Url"
					hx-select-oob="@Htmx.GetHxSelectOob()"
					hx-swap="none"
					hx-push-url="true"
					hx-indicator="#htmx-indicator"
					preload="mouseover"
					class="sidebar-link my-1 ml-5 group-[.current]/li:text-blue-elastic!"
					id="page-@id"
					href="@f.Url">
					@f.NavigationTitle
				</a>
			</div>
		</li>
	}
	else if (item is GroupNavigation folder)
	{
		var g = folder.Group;
		const int initialExpandLevel = 1;
		var shouldInitiallyExpand = g.Depth <= initialExpandLevel;
		<li class="flex flex-wrap group-navigation @(g.Depth > 1 ? "ml-2 pl-2 border-l-1 border-l-gray-200" : string.Empty)">
			<label for="@id" class="peer group/label flex items-center overflow-hidden @(g.Depth == 1 ? "mt-2" : "")">
				<svg
					xmlns="http://www.w3.org/2000/svg"
					fill="none"
					viewBox="0 0 24 24"
					stroke-width="1.5"
					stroke="currentColor"
					class="w-4 mr-1 shrink -rotate-90 group-has-checked/label:rotate-0 cursor-pointer text-ink">
					<path stroke-linecap="round" stroke-linejoin="round" d="m19.5 8.25-7.5 7.5-7.5-7.5"/>
				</svg>
				<input
					id="@id"
					type="checkbox"
					class="hidden"
					aria-hidden="true"
					@(shouldInitiallyExpand ? "checked" : string.Empty)
				>
				<a
					href="@g.Index?.Url"
					hx-get="@g.Index?.Url"
					hx-select-oob="@Htmx.GetHxSelectOob()"
					hx-swap="none"
					hx-push-url="true"
					hx-indicator="#htmx-indicator"
					preload="mouseover"
					id="page-@g.Index?.Id"
					class="sidebar-link inline-block my-1 @(g.Depth == 1 ? "uppercase tracking-[0.05em] text-ink-light font-semibold" : string.Empty)">
					@g.Index?.NavigationTitle
				</a>
			</label>
			@if (g.NavigationItems.Count > 0)
			{
				<ul class="w-full overflow-y-hidden hidden peer-has-checked:block peer-has-[:focus]:block has-[:focus]:block">
					@await RenderPartialAsync(_TocTreeNav.Create(new NavigationTreeItem
					{
						Level = g.Depth,
						CurrentDocument = Model.CurrentDocument,
						SubTree = g
					}))
				</ul>
			}
		</li>
	}
}
